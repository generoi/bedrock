name: Test
on:
  pull_request:

env:
  NODE_VERSION: 14
  PHP_VERSION: 8.0

jobs:
  test:
    if: ${{ github.actor != 'dependabot[bot]' }}
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository (latest)
        uses: actions/checkout@v2
        if: github.event.inputs.ref == ''

      - name: Checkout Repository (specific reference)
        uses: actions/checkout@v2
        if: github.event.inputs.ref != ''
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: bcmath, curl, imagick, intl, mbstring, mysql, xml, xmlrpc, zip

      - name: Start MySQL service
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE db;' -uroot -proot
          mysql -e "CREATE USER 'db'@'localhost' IDENTIFIED BY 'db';" -uroot -proot
          mysql -e "GRANT ALL PRIVILEGES ON db.* TO 'db'@'localhost' WITH GRANT OPTION;" -uroot -proot

      - name: Configure basic http authentication for Composer
        run: composer config --global http-basic.satispress.generodigital.com ${{ secrets.SATISPRESS_API_KEY }} ${{ secrets.SATISPRESS_PASSWORD }}

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: NPM Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install development packages to run tests
        run: composer install:development

      - name: Run CI tests
        run: composer ci --no-interaction

      - name: Build assets
        run: composer build --no-interaction

      - name: Launch web server
        run: ./vendor/bin/wp server &

      - name: Setup environment file
        run: echo "Config::define('WP_HOME', 'http://localhost:8080');" >> config/environments/production.php

      - name: Setup .env
        run: sed -i 's/DB_HOST=.*/DB_HOST=localhost/g' .env

      - name: Install WordPress
        run: ./vendor/bin/wp core install --url=http://localhost:8080 --title="Bedrock" --admin_user="admin" --admin_password="admin" --admin_email="bedrock@example.test"

      - name: Load home page # @todo
        run: curl http://localhost:8080/
