// A gutter size equivalent to 1 column + it's gutter
$-gutter-column-1: calc(var(--grid-column) + var(--grid-gutter));

.wp-block-media-text {
  > .wp-block-media-text__content {
    align-self: flex-start;
    padding-right: 0;
    // Blocks without wide/full alignment needs a small gutter
    padding-left: var(--grid-gutter);
  }

  // Swap the gutter for media on the right
  &.has-media-on-the-right > .wp-block-media-text__content {
    padding-left: 0;
    padding-right: var(--grid-gutter);
  }

  // Wide aligned blocks use a 1 column sized gutter with no padding on the
  // opposite site of the media
  [data-align="wide"] > &,
  &.alignwide {
    > .wp-block-media-text__content {
      padding-left: $-gutter-column-1;
    }

    &.has-media-on-the-right > .wp-block-media-text__content {
      padding-left: 0;
      padding-right: $-gutter-column-1;
    }
  }

  // Wide aligned blocks use a 1 column sized gutter on both sides of the content
  [data-align="full"] > & > .wp-block-media-text__content,
  &.alignfull > .wp-block-media-text__content {
    padding-left: $-gutter-column-1;
    padding-right: $-gutter-column-1;
  }

  // Blocks with a background color have a 1 column sized gutter on all sides.
  &.has-background .wp-block-media-text__content {
    padding: $-gutter-column-1;
  }

  // Blocks without a background should not have a gutter before the previous
  // element, eg heading.
  [data-align="wide"] > &:not(.has-background),
  [data-align="full"] > &:not(.has-background),
  &:not(.has-background).alignwide,
  &:not(.has-background).alignfull {
    margin-top: 0;
  }
}

// Hero blocks have the background color span the entire viewport.
.wp-block-media-text.is-style-hero {
  max-width: var(--alignwide-width);
  padding-left: var(--grid-gutter);
  padding-right: var(--grid-gutter);
  margin-left: auto;
  margin-right: auto;
  position: relative;

  .wp-block-media-text__content {
    padding-right: 0;
    padding-left: $-gutter-column-1;
  }

  &.has-media-on-the-right > .wp-block-media-text__content {
    padding-left: 0;
    padding-right: $-gutter-column-1;
  }

  &::before {
    display: block;
    content: '';
    position: absolute;
    background-color: inherit;
    top: 0;
    bottom: 0;
    left: calc(-50vw + 50%);
    width: 100vw;
    z-index: -1;
  }
}

// Utility style for breaking the block into 2/3 content.
.wp-block-media-text.is-style-two-thirds {
  --media-text-two-thirds: calc(100% / 3 * 2);

  grid-template-columns: 1fr var(--media-text-two-thirds) !important;

  &.has-media-on-the-right {
    grid-template-columns: var(--media-text-two-thirds) 1fr !important;
  }
}

// GDS
.wp-block-media-text.is-image-fill figure.wp-block-media-text__media > img {
  position: relative;
  margin: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.wp-block-media-text.has-background {
  --tag-background-color: transparent;
  --tag-border-color: white;
}
