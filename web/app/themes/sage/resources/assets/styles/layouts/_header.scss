.l-header {
  button,
  a {
    outline: none;
  }

  // Static header bar on desktop
  // ----------------------------
  &__bar--desktop {
    // Let the grid take care of paddings.
    &.top-bar {
      padding-left: 0;
      padding-right: 0;
    }
  }

  // Static header bar on mobile
  // ----------------------------
  &__bar--mobile {
    position: relative;
    z-index: 2;

    // Expand the child without using `.cell`
    > .grid-x {
      flex: 1 0 auto;
    }
  }

  // Mobile menu
  // -----------
  &__nav--mobile {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 1;
    background-color: $titlebar-background;

    @include admin-bar() {
      top: $-admin-bar-height;
    }

    // Offset by the height of the header.
    @if variable-exists(c-header-sizes) {
      @each $size, $height in $c-header-sizes {
        @include breakpoint($size) {
          padding-top: $height;
        }
      }
    }

    .primary_navigation {
      // Scroll within the container so as not to trigger Headroom.
      height: 100%;
      overflow: scroll;
      // Prevent momentum scrolling on iOS. Scrollbars are not visible on mobile.
      -webkit-overflow-scrolling: touch;
      display: flex;

      // Let each item take up as much space as possible
      &__item,
      &__link {
        flex: 1 0 auto;
        display: flex !important; // For some reason Foundation hides items.
        flex-wrap: wrap;
        // Vertically center any content that isnt grown, eg buttons.
        justify-content: center;
      }

      &__link {
        // Horizontally center content.
        align-items: center;

        // Don't grow button links.
        &.button {
          flex: 0 1 auto;
          align-self: center;
          // Remove margins set for buttons in desktop menu
          margin-left: 0 !important;
        }
      }

      .has-submenu-toggle {
        $submenu-toggle-width: 50px;

        > a {
          // Grow with as much space as there is
          flex: 1 0 auto;
          // align horizontally offsetting by the toggle buttons size.
          text-indent: $submenu-toggle-width;
          margin-right: 0; // remove foundation margin
        }

        > .submenu-toggle {
          // Disable foundation absolute positioning
          position: static;
          height: auto;
          padding-right: 10px;

          // Fixed width without growing.
          flex: 0 1 0;
          min-width: $submenu-toggle-width;
        }

        // Submenus take up the full row width.
        > .submenu {
          flex: 1 0 100%;
          margin-left: 0; // remove nested indent.
        }
      }

      // Distinguish submenu items.
      .submenu a {
        color: $medium-gray;
      }
    }
  }

  // Desktop menu
  // ------------
  &__nav--desktop {
    // .primary_navigation {
    //   &__item {
    //     &--current {}
    //   }
    //   &__link {}
    // }
  }

  // Toggle button
  // -------------
  &__nav-toggle {
    outline: none;
    // Make the target area larger.
    padding: 2rem;
    margin-top: -1rem;
    margin-right: -1rem !important; // override .title-bar .menu-icon
    > span { margin-left: -1rem; }

    &.menu-icon::after { display: none; }

    > span {
      @include burger(
        $width: rem-calc(20px),
        $height: rem-calc(2px),
        $gutter: $titlebar-icon-spacing,
        $color: $titlebar-icon-color
      );
    }

    &.active > span {
      @include burger-to-cross();
    }
  }
}
