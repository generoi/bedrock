/**
 * Create colored overlays on top of background images.
 * For simple background colors use .u-bg--{{color}} instead.
 * @example:
 * <div class="overlay overlay--black" style="background-image: url('{{ section.background.src }}');">
 *   <div class="overlay__foreground">
 *     <p>Lorem ipsum</p>
 *   </div>
 * </div>
 */

$c-overlay-palette: (
  "primary": rgba(get-color(primary), 0.85),
  "secondary": rgba(get-color(secondary), 0.85),
  "white": rgba($white, 0.75),
  "black": rgba($black, 0.5),
) !default;

$c-global-transition: all 0.3s ease 0s !default;

@mixin overlay-container(
  $styles: $c-overlay-palette,
  $background-selector: '&:before'
) {
  position: relative;
  background-size: cover;

  a#{&} {
    display: block;
    transition: $c-global-transition;

    @extend %u-link-no-state;
  }

  @if $styles != null {
    // Provide solid background colors and most importantly, their text
    // coloring rules.
    @each $name, $defs in $c-background-palette {
      &--#{$name} {
        @extend %u-bg--#{$name};
      }
    }

    @include overlay-styles($styles, $background-selector);
  }
}

@mixin overlay-styles($styles, $background-selector: '&:before') {
  // Provide transparent overlays.
  @each $name, $color in $styles {
    &--#{$name} {
      #{$background-selector} {
        background-color: $color;
      }

      a#{&}:hover {
        #{$background-selector} {
          background-color: adjust-color($color, $alpha: 0.1);
        }
      }
    }
  }
}

@mixin overlay-background() {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 1;
}

@mixin overlay-foreground() {
  z-index: 2;
  position: relative;
}

.overlay {
  @include overlay-container();

  .tailor-ui &[class*="tailor-"] {
    > div:not(.tailor-column__helper) {
      position: relative;
      z-index: 2;
    }
    // Tailor sets the :before to have a z-index of 999.
    &.is-hovering,
    &.is-editing,
    &.is-selected {
      > div { z-index: 1000; }

      @at-root {
        .tailor-ui .tools .select-container { z-index: 1000; }
      }
    }
  }

  &__foreground {
    @include overlay-foreground();
  }

  // The overlay.
  &::before { content: ''; }

  &::before,
  &__background {
    @include overlay-background();
  }
}
