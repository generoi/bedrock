%wp-caption {
  @include thumbnail;
  // remove figure margin.
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
}

%wp-caption-text {
  font-size: $small-font-size;
  line-height: $global-lineheight;

  $border: if(length($thumbnail-border) > 1, nth($thumbnail-border, 2), 0);

  @if ($border == 0) and ($thumbnail-shadow != none) {
    $border: $global-padding/2;
  }

  padding-left: $border;
  padding-right: $border;
  padding-top: if($border == 0, 4px, $border);
}

/**
 * Stretch to the edges of the viewport regardless of it's size.
 */
%alignfull {
  // Always stretch it, even if the uploaded image is too small.
  max-width: none;

  // Negate the padding from a grid container.
  .grid-container-padded & {
    @include xy-gutters($gutters: $grid-padding-gutters, $negative: true);

    @each $breakpoint, $gutter in $grid-margin-gutters {
      width: calc(100% + #{rem-calc(get-side($gutter, left) + get-side($gutter, right))});
    }
  }
}

/**
 * No alignment and no stretching, limited to the content width.
 */
%alignnone {
  display: block;
}

/**
 * Ensure image is as large as the content area but let it stretch 20% on each
 * side if possible.
 */
%alignwide {
  $-max-width: calc(#{$c-paragraph-max-width} + 20%);

  display: block;
  margin-left: auto;
  margin-right: auto;

  @media print, screen and (min-width: #{$-max-width}) {
    max-width: $-max-width;
  }

  @include breakpoint($c-paragraph-max-width) {
    min-width: $c-paragraph-max-width;
  }
}

/**
 * Center align image but not more than the content area.
 */
%aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
  text-align: center;

  @include breakpoint($c-paragraph-max-width) {
    max-width: $c-paragraph-max-width;
  }
}

/**
 * Left/Rigth aligning images should only apply on larger screens.
 */
%alignleft {
  @include breakpoint(medium) {
    float: left;
    margin-right: $global-margin;

    // Because floated the wrapping paragraph will have 0 height but still a
    // margin pushing down the content on teh right on the image. Push down
    // image to align.
    p > &:only-child,
    p > a:only-child > & {
      margin-top: $paragraph-margin-bottom;
    }
  }

  // Caption shortcode is a figure while regular images are wrapped within a
  // paragraph.
  @include breakpoint($c-paragraph-max-width) {
    &.wp-caption {
      margin-left: calc(50% - #{($c-paragraph-max-width/2)});
    }
  }
}

%alignright {
  @include breakpoint(medium) {
    float: right;
    margin-left: $global-margin;

    // Because floated the wrapping paragraph will have 0 height but still a
    // margin pushing down the content on teh right on the image. Push down
    // image to align.
    p > &:only-child,
    p > a:only-child > & {
      margin-top: $paragraph-margin-bottom;
    }
  }

  // Caption shortcode is a figure while regular images are wrapped within a
  // paragraph.
  @include breakpoint($c-paragraph-max-width) {
    &.wp-caption {
      margin-right: calc(50% - #{($c-paragraph-max-width/2)});
    }
  }
}

/**
 * Add the classes.
 */
.wp-caption {
  @extend %wp-caption;

  &.alignnone {
    width: auto !important;
  }
}
.wp-caption-text { @extend %wp-caption-text; }
.alignfull { @extend %alignfull; }
.alignnone { @extend %alignnone; }
.alignwide { @extend %alignwide; }
.aligncenter { @extend %aligncenter; }
.alignleft { @extend %alignleft; }
.alignright { @extend %alignright; }

/** Video embed */
.wp-video {
  max-width: 100% !important;

  @include breakpoint($c-paragraph-max-width) {
    max-width: $c-paragraph-max-width !important;
  }
}

/**
 * Video embeds, the wrapping .wp-video sets the paragraph width so the
 * responsive-embed wrapper needs to be set on it's child.
 */
.mejs-container {
  @include responsive-embed(widescreen);

  width: 100% !important;
  height: 0 !important;

  > .mejs-inner {
    position: absolute;
    top: 0;
    left: 0;
    width: 100% !important;
    height: 100% !important;
  }
}

.screen-reader-text {
  @include element-invisible;
}
